{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","src/assets/js/dbhelper.ts","src/assets/js/index.ts","src/assets/js/map.ts","src/assets/js/restaurant-detail.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","apply","then","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","prototype","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","value","Cursor","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","arr","Array","slice","callback","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","exp","open","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","delete","default","self","idb","idb_1","DBHelper","mapMarkerForRestaurant","restaurant","map","google","maps","Marker","position","latlng","title","url","urlForRestaurant","animation","Animation","DROP","DATABASE_URL","dbPromise","upgradeDb","keyPath","restStore","storedRestaurants","fetch","mode","res","json","restaurants","tx","put","storedReviews","reviews","reviewsStore","review","readAllRestaurants","readRestaurantById","id","getReviewById","readReviewById","readAllReviews","NEW_REVIEW","data","navigator","onLine","body","JSON","stringify","headers","Content-Type","success","console","log","alert","window","location","reload","dbhelper_1","map_1","addEventListener","serviceWorker","register","document","indexPage","locations","fetchNeighborhoods","fetchCuisines","fillRestaurantsHTML","updateRestaurants","neighborhoods","neighborhood","neighborhoodSet","Set","from","uniqueNeighborhoods","fillNeighborhoodsHTML","select","getElementById","option","createElement","innerHTML","appendChild","cuisines","cuisine_type","cuisineSet","uniqueCuisines","fillCuisinesHTML","cuisine","state","changeDOM","target","ul","selectedNeighborhood","selectedCuisine","filteredRestaurants","filter","insertAdjacentElement","showMap","createRestaurantHTML","li","className","picture","srcsetDesktop","photograph","srcsetTablet","srcsetMobile","srcsetFallback","fav","is_favorite","classList","add","remove","setAttribute","url_1","catch","response","removeAttribute","url_2","address","more","href","restName","Map","zoom","center","lat","lng","scrollwheel","markerLoc","split","parseInt","restaurantDetailsPage","addReview","rating","comments","restaurant_id","preventDefault","table","oh","operating_hours","keys","key","day","hours","thead","cell","tr","reviewsList","reverse"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      if (request) {\n        request.onupgradeneeded = function(event) {\n          if (upgradeCallback) {\n            upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n          }\n        };\n      }\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","import idb from 'idb';\nimport { Restaurant, Review } from \"./interfaces\";\ndeclare var google: any;\nexport default class DBHelper {\n\n    public static DATABASE_URL = () => {\n        // Changed to Heroku\n        // return 'http://localhost:1337'\n        return `https://mws-project-3.herokuapp.com`;\n    }\n    public static dbPromise = () => {\n        return idb.open(\"test\", 3, (upgradeDb) => {\n            switch (upgradeDb.oldVersion) {\n                case 0:\n                    upgradeDb.createObjectStore(\"restaurants\", { keyPath: \"id\" });\n                case 1:\n                    const restStore = upgradeDb.transaction.objectStore(\"restaurants\");\n                    restStore.createIndex(\"cuisine\", \"cuisine_type\");\n                    restStore.createIndex(\"neighborhoods\", \"neighborhood\");\n                    restStore.createIndex(\"id\", \"id\");\n                case 2:\n                    upgradeDb.createObjectStore(\"reviews\", { keyPath: \"id\" });\n                    const reviewsStore = upgradeDb.transaction.objectStore(\"reviews\");\n                    reviewsStore.createIndex(\"id\", \"restaurant_id\");\n\n            }\n        });\n    }\n\n    public static storedRestaurants = () => {\n        return fetch(`${DBHelper.DATABASE_URL()}/restaurants`, {\n            mode: \"cors\",\n        })\n            .then((res: Response) => res.json())\n            .then((restaurants: Restaurant[]) => {\n                return DBHelper.dbPromise().then((db) => {\n                    const tx = db.transaction(\"restaurants\", \"readwrite\");\n                    const restStore = tx.objectStore(\"restaurants\");\n                    restaurants.map((restaurant: Restaurant) => {\n                        restStore.put(restaurant);\n                    });\n                    return tx.complete.then(() => Promise.resolve(restaurants));\n\n                });\n            });\n    }\n\n    public static storedReviews = () => {\n        return fetch(`${DBHelper.DATABASE_URL()}/reviews`, {\n            mode: \"cors\",\n        })\n            .then((res: Response) => res.json())\n            .then((reviews: Review[]) => {\n                return DBHelper.dbPromise().then((db) => {\n                    const tx = db.transaction(\"reviews\", \"readwrite\");\n                    const reviewsStore = tx.objectStore(\"reviews\");\n                    reviews.map((review: Review) => {\n                        reviewsStore.put(review);\n                    });\n                    return tx.complete.then(() => Promise.resolve(reviews));\n\n                });\n            });\n    }\n\n    public static readAllRestaurants = () => {\n        return DBHelper.storedRestaurants().then(() => {\n            return DBHelper.dbPromise().then((db) => {\n                return db.transaction(\"restaurants\").objectStore(\"restaurants\").getAll();\n            });\n        });\n    }\n\n    public static readRestaurantById = (id: number) => {\n        return DBHelper.storedRestaurants().then(() => {\n            return DBHelper.dbPromise().then((db) => {\n                return db.transaction(\"restaurants\").objectStore(\"restaurants\").get(id);\n            });\n        });\n    }\n    public static getReviewById = (id: number) => {\n        return fetch(`${DBHelper.DATABASE_URL()}/reviews/?restaurant_id=${id}`, {\n            mode: \"cors\",\n        })\n            .then((res) => res.json())\n            .then((reviews) => reviews);\n    }\n    public static readReviewById = (id: number) => {\n        return DBHelper.storedReviews().then(() => {\n            return DBHelper.dbPromise().then((db) => {\n                return db.transaction(\"reviews\").objectStore(\"reviews\").index(\"id\").get(id);\n            });\n        });\n    }\n\n    public static readAllReviews = () => {\n        return DBHelper.storedReviews().then(() => {\n            return DBHelper.dbPromise().then((db) => {\n                return db.transaction(\"reviews\").objectStore(\"reviews\").getAll();\n            });\n        });\n    }\n\n    public static urlForRestaurant = (restaurant: Restaurant) => {\n        return (`./restaurant.html?id=${restaurant.id}`);\n    }\n    public static mapMarkerForRestaurant(restaurant: Restaurant, map: any) {\n        const marker = new google.maps.Marker({\n            position: restaurant.latlng,\n            title: restaurant.name,\n            url: DBHelper.urlForRestaurant(restaurant),\n            map,\n            animation: google.maps.Animation.DROP,\n        });\n        return marker;\n    }\n    public static NEW_REVIEW = (data: object) => {\n\n        if (navigator.onLine) {\n            return fetch(`${DBHelper.DATABASE_URL()}/reviews`, {\n                method: \"POST\",\n                mode: \"cors\",\n                body: JSON.stringify(data),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            })\n                .then((res) => res.json())\n                .then((success) => console.log(\"Success\", success))\n                .then(() => {\n                    alert(\"Review created successfully!\");\n                    window.location.reload();\n                });\n\n        } else {\n            return alert(\"You're offline!\");\n        }\n    }\n}\n","\nimport DBHelper from \"./dbhelper\";\nimport { Restaurant } from \"./interfaces\";\nimport map from \"./map\";\n// Service Worker\n// Check that service workers are registered\nif (\"serviceWorker\" in navigator) {\n    // Use the window load event to keep the page load performant\n    window.addEventListener(\"load\", () => {\n        navigator.serviceWorker.register(\"/sw.js\");\n    });\n}\n// End Service Worker\n\n/**\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\n */\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    if (document.title === \"Restaurant Reviews\") {\n        indexPage();\n\n    }\n});\nlet locations: string[] = [];\n\n/**\n * Fetch all neighborhoods and set their HTML.\n */\n\nconst indexPage = () => {\n    fetchNeighborhoods();\n    fetchCuisines();\n    fillRestaurantsHTML(\"\", \"\");\n\n    updateRestaurants();\n\n};\nconst fetchNeighborhoods = () => {\n    DBHelper.readAllRestaurants().then((restaurants: Restaurant[]) => {\n\n        const neighborhoods = restaurants.map((restaurant: Restaurant) => restaurant.neighborhood);\n        // Remove duplicates from neighborhoods;\n        const neighborhoodSet = new Set(neighborhoods);\n        const uniqueNeighborhoods = Array.from(neighborhoodSet);\n\n        return uniqueNeighborhoods;\n\n    }).then((uniqueNeighborhoods) => fillNeighborhoodsHTML(uniqueNeighborhoods));\n};\n\n/**\n * Set neighborhoods HTML.\n */\nconst fillNeighborhoodsHTML = (neighborhoods: any) => {\n    const select = document.getElementById(\"neighborhoods-select\");\n    neighborhoods.map((neighborhood: any) => {\n        const option = document.createElement(\"option\");\n        option.innerHTML = neighborhood;\n        option.value = neighborhood;\n        select.appendChild(option);\n\n    });\n\n};\n\n/**\n * Fetch all cuisines and set their HTML.\n */\nconst fetchCuisines = () => {\n    DBHelper.readAllRestaurants().then((restaurants: Restaurant[]) => {\n        const cuisines = restaurants.map((restaurant: Restaurant) => restaurant.cuisine_type);\n        // Remove duplicates from neighborhoods;\n        const cuisineSet = new Set(cuisines);\n        const uniqueCuisines = Array.from(cuisineSet);\n        return uniqueCuisines;\n\n    }).then((uniqueCuisines) => fillCuisinesHTML(uniqueCuisines));\n\n};\n\n/**\n * Set cuisines HTML.\n */\nconst fillCuisinesHTML = (cuisines: any) => {\n    const select = document.getElementById(\"cuisines-select\");\n\n    cuisines.map((cuisine: any) => {\n        const option = document.createElement(\"option\");\n        option.innerHTML = cuisine;\n        option.value = cuisine;\n        select.appendChild(option);\n    });\n\n};\n\n/**\n * Initialize Google map, called from HTML.\n */\n\nconst updateRestaurants = () => {\n\n    const state = {\n        cuisine: \"\",\n        neighborhood: \"\",\n    };\n    const fetchCuisine =\n        document.getElementById(\"cuisines-select\").addEventListener(\"change\", (e) => {\n            const cuisine = (e.target as HTMLSelectElement).value;\n            console.log((e.target as HTMLSelectElement).value);\n            state.cuisine = cuisine;\n            changeDOM();\n\n        });\n\n    const fetchNeighborhood = document.getElementById(\"neighborhoods-select\").addEventListener(\"change\", (e) => {\n        const neighborhood = (e.target as HTMLSelectElement).value;\n        console.log((e.target as HTMLSelectElement).value);\n        state.neighborhood = neighborhood;\n        changeDOM();\n\n    });\n\n    const changeDOM = () => {\n\n        document.getElementById(\"restaurants-list\").innerHTML = \"\";\n        fillRestaurantsHTML(state.cuisine, state.neighborhood);\n        locations = [];\n        console.log(\"Arriba\", locations);\n    };\n};\n\nconst fillRestaurantsHTML = (cuisine: any, neighborhood: any) => {\n\n    DBHelper.readAllRestaurants().then((restaurants: any) => {\n\n        const ul = document.getElementById(\"restaurants-list\");\n        const selectedNeighborhood = neighborhood;\n        const selectedCuisine = cuisine;\n        const filteredRestaurants =\n            (!selectedCuisine && !selectedNeighborhood) ?\n                restaurants :\n                (selectedCuisine && selectedNeighborhood) ?\n                    restaurants.filter((restaurant: any) => {\n                        return restaurant.neighborhood === selectedNeighborhood;\n                    }).filter(\n                        (restaurant: any) => restaurant.cuisine_type === selectedCuisine,\n                    ) :\n                    (selectedCuisine || selectedNeighborhood) ?\n                        restaurants.filter((restaurant: any) => {\n                            return restaurant.neighborhood === selectedNeighborhood || restaurant.cuisine_type === selectedCuisine;\n                        })\n                        : restaurants;\n\n        if (filteredRestaurants.length === 0) {\n\n            const p = document.createElement(\"p\");\n            p.innerHTML = \"There is no restaurants matching your criteria. Try again a broader selection\";\n            ul.insertAdjacentElement(\"afterbegin\", p);\n            locations = [];\n            showMap(locations);\n        } else {\n\n            filteredRestaurants.map((restaurant: Restaurant) => {\n                locations.push(restaurant.latlng);\n                ul.appendChild(createRestaurantHTML(restaurant)); return locations;\n            });\n\n            showMap(locations);\n        }\n        console.log(\"Abajo\", locations);\n\n    });\n};\n\n/**\n * Create restaurant HTML.\n */\nconst createRestaurantHTML = (restaurant: any) => {\n    const li = document.createElement(\"li\");\n    li.className = \"card\";\n    const picture = document.createElement(\"picture\");\n    const srcsetDesktop = `images/${restaurant.photograph}-desktop.webp`;\n    const srcsetTablet = `images/${restaurant.photograph}-tablet.webp`;\n    const srcsetMobile = `images/${restaurant.photograph}-mobile.webp`;\n    const srcsetFallback = `images/${restaurant.photograph}-tablet.jpg`;\n    picture.innerHTML = `<source media=\"(min-width: 1024px)\" srcset=\"${srcsetDesktop}\" type=\"image/webp\">\n  <source media=\"(min-width: 728px)\" srcset=\"${srcsetTablet}\" type=\"image/webp\">\n  <source media=\"(max-width: 727px)\" srcset=\"${srcsetMobile}\" type=\"image/webp\">\n  <source  srcset=\"${srcsetFallback}\" type=\"image/jpeg\">\n  <img src=\"${srcsetFallback}\" class=\"restaurant-img\" alt=\"${restaurant.name} ${restaurant.cuisine_type} food restaurant New York City\">`;\n\n    li.appendChild(picture);\n    // TODO PROJECT REVIEW\n    // Correct restaurant's name semantic mistake in index.html\n\n    const name = document.createElement(\"h3\");\n    name.innerHTML = restaurant.name;\n    li.appendChild(name);\n    const fav = document.createElement(\"span\");\n    const isFav = restaurant.is_favorite;\n    if (isFav === \"true\") {\n        fav.classList.add(\"yes-fav\");\n        fav.classList.remove(\"no-fav\");\n        fav.setAttribute(\"aria-label\", \"marked as favorite\");\n    } else {\n        fav.classList.add(\"no-fav\");\n        fav.classList.remove(\"yes-fav\");\n        fav.setAttribute(\"aria-label\", \"marked as no favorite\");\n    }\n\n    function toggleFav() {\n        if (fav.className === \"no-fav\") {\n            const url = `${DBHelper.DATABASE_URL()}/restaurants/${restaurant.id}/?is_favorite=true`;\n            fetch(url, {\n                method: \"PUT\",\n                mode: \"cors\",\n            }).then((res) => res.json())\n                .catch((error) => console.error(\"Error:\", error))\n                .then((response) => console.log(\"Success:\", response, url));\n            this.classList.replace(\"no-fav\", \"yes-fav\");\n            this.removeAttribute(\"aria-label\");\n            this.setAttribute(\"aria-label\", \"marked as favorite\");\n        } else {\n            const url = `${DBHelper.DATABASE_URL()}/restaurants/${restaurant.id}/?is_favorite=false`;\n            fetch(url, {\n                method: \"PUT\",\n                mode: \"cors\",\n            }).then((res) => res.json())\n                .catch((error) => console.error(\"Error:\", error))\n                .then((response) => console.log(\"Success:\", response, url));\n            this.classList.replace(\"yes-fav\", \"no-fav\");\n            this.removeAttribute(\"aria-label\");\n            this.setAttribute(\"aria-label\", \"marked as no favorite\");\n        }\n\n    }\n    fav.addEventListener(\"click\", toggleFav);\n\n    li.appendChild(fav);\n\n    const neighborhood = document.createElement(\"p\");\n    neighborhood.innerHTML = restaurant.neighborhood;\n    li.appendChild(neighborhood);\n\n    const address = document.createElement(\"p\");\n    address.innerHTML = restaurant.address;\n    li.appendChild(address);\n\n    const more = document.createElement(\"a\");\n    more.innerHTML = \"View Details\";\n    more.href = DBHelper.urlForRestaurant(restaurant);\n    const restName = restaurant.name;\n    const cuisine = restaurant.cuisine_type;\n    const location = restaurant.neighborhood;\n    more.setAttribute(\"aria-label\", ` View ${restName} details. ${cuisine} restaurant located in ${location}`);\n    li.appendChild(more);\n\n    return li;\n};\nconst showMap = (locations: any) => {\n    map(locations);\n};\n","\ndeclare var google: any;\nexport default function initMap(locations: any) {\n\n    const loc = {\n        lat: 40.712216,\n        lng: -73.987501,\n    };\n\n    const map = new google.maps.Map(\n        document.getElementById(\"map\"), {\n            zoom: 12, center: loc,\n            scrollwheel: false,\n        });\n\n    locations.map((markerLoc: any) => {\n        const marker = new google.maps.Marker({ position: markerLoc, map, animation: google.maps.Animation.DROP });\n    });\n\n}\n","\nimport DBHelper from \"./dbhelper\";\nimport map from \"./map\";\n\nimport { Restaurant, Window } from \"./interfaces\";\n\nconst url = window.location.href.split(\"=\");\nconst id = parseInt(url[1]);\n\ndocument.addEventListener(\"DOMContentLoaded\", (event) => {\n    if (document.title === \"Restaurant Info\") {\n        return restaurantDetailsPage(id);\n    }\n});\n\nconst restDetail = (id: number) => {\n    return DBHelper.readRestaurantById(id).then((restaurant: Restaurant) => {\n        const locations = [];\n        locations.push(restaurant.latlng);\n        map(locations);\n        const form = document.getElementById(\"review-form\");\n        form.addEventListener(\"submit\", (e) => {\n            e.preventDefault();\n            addReview(e);\n\n        });\n\n        const breadcrumbs = document.getElementById(\"breadcrumb-ul\");\n        breadcrumbs.innerHTML = `\n        <li>\n                  <a href=\"/\">Home</a> / ${restaurant.name}\n                </li>\n        `;\n        const name = document.getElementById(\"restaurant-name\");\n        name.innerHTML = `\n        ${restaurant.name}\n        `;\n\n        const fav = document.createElement(\"span\");\n        const isFav = restaurant.is_favorite;\n\n        if (isFav === \"true\") {\n            fav.classList.add(\"yes-fav\");\n            fav.classList.remove(\"no-fav\");\n            fav.setAttribute(\"aria-label\", \"marked as favorite\");\n        } else {\n            fav.classList.add(\"no-fav\");\n            fav.classList.remove(\"yes-fav\");\n            fav.setAttribute(\"aria-label\", \"marked as no favorite\");\n        }\n        function toggleFav() {\n            if (fav.className === \"no-fav\") {\n                const url = `${DBHelper.DATABASE_URL()}/restaurants/${restaurant.id}/?is_favorite=true`;\n                fetch(url, {\n                    method: \"PUT\",\n                    mode: \"cors\",\n                }).then((res) => res.json())\n                    .catch((error) => console.error(\"Error:\", error))\n                    .then((response) => console.log(\"Success:\", response, url));\n                this.classList.replace(\"no-fav\", \"yes-fav\");\n                this.removeAttribute(\"aria-label\");\n                this.setAttribute(\"aria-label\", \"marked as favorite\");\n            } else {\n                const url = `${DBHelper.DATABASE_URL()}/restaurants/${restaurant.id}/?is_favorite=false`;\n                fetch(url, {\n                    method: \"PUT\",\n                    mode: \"cors\",\n                }).then((res) => res.json())\n                    .catch((error) => console.error(\"Error:\", error))\n                    .then((response) => console.log(\"Success:\", response, url));\n                this.classList.replace(\"yes-fav\", \"no-fav\");\n                this.removeAttribute(\"aria-label\");\n                this.setAttribute(\"aria-label\", \"marked as no favorite\");\n            }\n\n        }\n        fav.addEventListener(\"click\", toggleFav);\n\n        name.appendChild(fav);\n        const picture = document.getElementById(\"restaurant-picture\");\n        const srcsetMobile = `images/${restaurant.photograph}-mobile.webp`;\n        const srcsetTablet = `images/${restaurant.photograph}-tablet.webp`;\n        const srcsetDesktop = `images/${restaurant.photograph}-desktop.webp`;\n        const srcsetFallback = `images/${restaurant.photograph}-desktop.jpg`;\n\n        picture.innerHTML = `\n\n      <source media=\"(min-width: 728px)\" srcset=\"${srcsetDesktop}\" type=\"image/webp\">\n      <source media=\"(max-width: 727px)\" srcset=\"${srcsetMobile}\" type=\"image/webp\">\n      <source  srcset=\"${srcsetFallback}\" type=\"image/jpeg\">\n      <img src=\"${srcsetFallback}\" class=\"restaurant-img\" alt=\"${restaurant.name} ${restaurant.cuisine_type} food restaurant New York City\">\n        `;\n        const cuisine = document.getElementById(\"restaurant-cuisine\");\n        cuisine.innerHTML = `\n    ${restaurant.cuisine_type}\n    `;\n        const address = document.getElementById(\"restaurant-address\");\n        address.innerHTML = ` Address: ${restaurant.address}\n        `;\n        const table = document.getElementById(\"restaurant-hours\");\n        const oh = restaurant.operating_hours;\n\n        const result = Object.keys(oh).map((key: any) => {\n            return { day: (key), hours: oh[key] };\n        });\n\n        const thead = document.createElement(\"tr\");\n        thead.innerHTML = `<tr><th class=\"white-text\">Opening Hours</th></tr>`;\n        table.appendChild(thead);\n        result.map((cell) => {\n\n            const tr = document.createElement(\"tr\");\n            tr.innerHTML = `\n        <td>${cell.day}</td>\n        <td>${cell.hours}</td>\n\n        `;\n\n            table.appendChild(tr);\n\n        });\n    });\n};\nconst showReviews = (id: number) => {\n    return DBHelper.getReviewById(id).then((reviews) => {\n        document.getElementById(\"review-form\").addEventListener(\"input\", (event) => {\n            console.log((event.target as HTMLInputElement).value);\n        });\n\n        const reviewsList = document.getElementById(\"reviews-list\");\n\n        reviews\n            // .filter((filteredReview) => filteredReview.restaurant_id === id)\n            .reverse()\n            .map((review: any) => {\n                const li = document.createElement(\"li\");\n                li.innerHTML = `\n\n        <p><strong>Author</strong>: ${review.name} <span class=\"left\"><strong>        Rating</strong>: ${review.rating}  </span> </p>\n        <p>${review.comments}</p>\n`;\n                reviewsList.appendChild(li);\n\n            });\n    });\n\n};\n\nconst addReview = (e: any) => {\n\n    const name = (document.getElementById(\"review-author\") as HTMLInputElement).value;\n    const rating = (document.getElementById(\"rating_select\") as HTMLSelectElement).value;\n    const comments = (document.getElementById(\"review-comments\") as HTMLTextAreaElement).value;\n\n    const data = {\n        restaurant_id: id,\n        name,\n        rating,\n        comments,\n    };\n    DBHelper.NEW_REVIEW(data);\n\n};\nconst restaurantDetailsPage = (id: number) => {\n    restDetail(id);\n\n    showReviews(id);\n\n};\n"]}